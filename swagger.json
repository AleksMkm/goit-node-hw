{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Phonebook-REST-api",
    "description": "Endpoints for Phonebook app",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://phonebook-restapi.herokuapp.com/api" },
    { "url": "http://localhost:3030/api" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Contacts",
      "description": "Contact management endpoints"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Signup request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Provided email already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/verify/{verificationToken}": {
      "post": {
        "tags": ["Auth"],
        "summary": "User verification",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "required": "true",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (link is not valid)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/sub": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Change user's subscription",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Subscription type",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Retreival of all contacts",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllContactsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Contacts"],
        "summary": "Create new contact",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Object with new contact",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": ["Contacts"],
        "summary": "Get contact by id",
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": "true",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (link is not valid)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": ["Contacts"],
        "summary": "Edit contact",
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": "true",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "id of a contact",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (link is not valid)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Contacts"],
        "summary": "delete contact",
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": "true",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (link is not valid)"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SignupRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "verySecurePassword"
          },
          "name": {
            "type": "string",
            "description": "User's name or nickname",
            "example": "somethingGreat"
          }
        }
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "User's email"
              },
              "id": {
                "type": "string",
                "description": "User's id in db"
              },
              "subscription": {
                "type": "string",
                "description": "User's subscription type"
              },
              "avatar": {
                "type": "string",
                "description": "Link to User's avatar"
              },
              "verified": {
                "type": "boolean",
                "description": "User's verification status"
              }
            }
          }
        }
      },
      "SubRequest": {
        "type": "object",
        "required": ["subscription"],
        "properties": {
          "subscription": {
            "type": "string",
            "description": "User's subscription"
          }
        }
      },
      "SubResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "id": {
            "type": "string",
            "description": "User's id in db"
          },
          "subscription": {
            "type": "string",
            "description": "User's subscription type"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "AllContactsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": { "type": "string" },
            "name": { "type": "string" },
            "number": { "type": "string" }
          }
        },
        "example": [
          {
            "_id": "someId",
            "name": "Rachel Green",
            "number": "1 385 642 968"
          },
          {
            "_id": "someOtherId",
            "name": "Alyona",
            "number": "38 050 050 50 50"
          }
        ]
      },
      "CreateContactRequest": {
        "type": "object",
        "required": ["name", "number"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Contacts' name"
          },
          "number": {
            "type": "string",
            "description": "Contacts' phone number"
          }
        }
      },
      "UpdateContactRequest": {
        "type": "object",
        "required": ["number", "name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Contacts' name"
          },
          "number": {
            "type": "string",
            "description": "Contacts' phone number"
          }
        }
      },
      "ContactResponse": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "name": { "type": "string" },
          "number": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
